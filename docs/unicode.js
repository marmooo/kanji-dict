function loadConfig(){localStorage.getItem("darkMode")==1&&document.documentElement.setAttribute("data-bs-theme","dark")}function toggleDarkMode(){localStorage.getItem("darkMode")==1?(localStorage.setItem("darkMode",0),document.documentElement.setAttribute("data-bs-theme","light")):(localStorage.setItem("darkMode",1),document.documentElement.setAttribute("data-bs-theme","dark"))}function getCharacterURL(e){const t=document.createElement("canvas"),n=4;t.width=n,t.height=n;const s=t.getContext("2d",{alpha:!1,desynchronized:!0});return s.font=`${n}px sans-serif`,s.fillStyle="white",s.fillText(e,0,n),t.toDataURL()}const uFFFFURL=getCharacterURL("ï¿¿");function characterIsSupported(e){const t=getCharacterURL(e);return uFFFFURL!=t}function colorTable(e,t){return new Promise(n=>{setTimeout(()=>{if(!e.classList.contains("table-warning")){const n=String.fromCodePoint(t);characterIsSupported(n)||e.classList.add("table-warning")}n()},0)})}function isElementInViewport(e){const{top:t}=e.getBoundingClientRect();return t<=window.innerHeight}async function checkSupportInViewport(){const e=codeTrs.filter(e=>isElementInViewport(e));for(const s of e){const t=s.children,o=t[0].textContent,n=Number(`0x${o}`),i=Array(16).fill().map((e,t)=>n+t);await Promise.all(i.map(e=>colorTable(t[e-n+1],e)))}}loadConfig();const codeTrs=[...document.querySelectorAll("#table tr")].slice(1);checkSupportInViewport(),document.getElementById("toggleDarkMode").onclick=toggleDarkMode,globalThis.addEventListener("scroll",checkSupportInViewport)