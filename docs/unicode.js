function loadConfig(){localStorage.getItem("darkMode")==1&&document.documentElement.setAttribute("data-bs-theme","dark")}function toggleDarkMode(){localStorage.getItem("darkMode")==1?(localStorage.setItem("darkMode",0),document.documentElement.setAttribute("data-bs-theme","light")):(localStorage.setItem("darkMode",1),document.documentElement.setAttribute("data-bs-theme","dark"))}function getCharacterURL(e){const t=document.createElement("canvas"),n=4;t.width=n,t.height=n;const s=t.getContext("2d",{alpha:!1,desynchronized:!0});return s.font=`${n}px sans-serif`,s.fillStyle="white",s.fillText(e,0,n),t.toDataURL()}const uFFFFURL=getCharacterURL("ï¿¿");function characterIsSupported(e){const t=getCharacterURL(e);return uFFFFURL!=t}function colorTable(e,t){return new Promise(n=>{if(e.classList.contains("bg-warning-subtle"))n();else{const s=String.fromCodePoint(t);setTimeout(()=>{characterIsSupported(s)||e.classList.add("bg-warning-subtle"),n()},0)}})}function isElementInViewport(e){const{top:t,bottom:n}=e.getBoundingClientRect();return 0<=n&&t<=window.innerHeight}async function checkSupportInViewport(){const t=codeTrs.filter(e=>isElementInViewport(e)),e=Date.now();scrollId=e;for(const o of t){if(e!=scrollId)continue;const n=o.children,i=n[0].textContent,s=+`0x${i}`,a=Array(16).fill().map((e,t)=>s+t);await Promise.all(a.map(e=>colorTable(n[e-s+1],e)))}}loadConfig();let scrollId;const codeTrs=[...document.querySelectorAll("#table tr")].slice(1);checkSupportInViewport(),document.getElementById("toggleDarkMode").onclick=toggleDarkMode,globalThis.addEventListener("scroll",checkSupportInViewport)